name: CI/CD Pipeline to AWS

on:
  push:
    branches: [ "main" ]

env:
  ECR_REPOSITORY: devops-app
  AWS_REGION: eu-north-1

jobs:
  build_and_push_docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn -B clean install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_URI: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t ${{ env.ECR_URI }}/${{ env.ECR_REPOSITORY }}:latest .
          docker push ${{ env.ECR_URI }}/${{ env.ECR_REPOSITORY }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [build_and_push_docker]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to EC2 with CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name DevOpsApp \
            --deployment-group-name DevOpsAppGroup \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }} \
            --file-exists-behavior OVERWRITE